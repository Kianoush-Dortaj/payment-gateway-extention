import { ApiPromise } from '@polkadot/api';
export declare class PaymentGateway {
    private api;
    private endpoint;
    constructor(endpoint: string);
    connect(): Promise<ApiPromise>;
    getLatestBlock(): Promise<number>;
    createAccount(): Promise<{
        mnemonic: string;
        address: string;
    }>;
    transfer(account: {
        mnemonic: string;
        address: string;
    }, toAddress: string, amount: number): Promise<import("@polkadot/api-base/types").SubmittableExtrinsic<"promise", import("@polkadot/types/types").ISubmittableResult>>;
    subscribeToEvents(eventCallback: (eventData: any) => void): Promise<import("@polkadot/api-base/types").VoidFn>;
    subscribeToEventsForAccount(accountAddress: string, eventCallback: (eventData: any) => void): Promise<import("@polkadot/types-codec/types").Codec>;
    getBalance(address: string): Promise<number>;
    private _signTransaction;
    private _getMethodHex;
}
